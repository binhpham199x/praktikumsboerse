// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  COMPANY
  LEARNER
}

model User {
  userId    Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String @unique
  hash String

  Role Role

  company Company?
  learner Learner?
}

model Company {
  id Int @id @default(autoincrement())

  name        String
  description String
  city        String

  user   User @relation(fields: [userId], references: [userId])
  userId Int  @unique

  internship Internship[]
}

model Internship {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?

  Company   Company? @relation(fields: [companyId], references: [id])
  companyId Int?
}

model Learner {
  id Int @id @default(autoincrement())

  firstName String
  lastName  String

  user         User          @relation(fields: [userId], references: [userId])
  userId       Int           @unique
  applications Application[]
}

enum ApplicationStatus {
  ACCEPTED
  REJECTED
  PENDING
}

model Application {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  nachricht String
  status    ApplicationStatus @default(PENDING)

  Learner   Learner? @relation(fields: [learnerId], references: [id])
  learnerId Int?
}
